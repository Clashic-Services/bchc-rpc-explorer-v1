extends layout

block headContent
	title Node Status
	
block content
	h1(class="h2") Node Status
	hr

	if (getblockchaininfo)
		if (env.demoSite)
			p Data from RPC commands 
				a(href="/rpc-browser?method=getblockchaininfo") getblockchaininfo
				span , 
				a(href="/rpc-browser?method=getnetworkinfo") getnetworkinfo
				span , 
				a(href="/rpc-browser?method=getnettotals") getnettotals
				span , 
				a(href="/rpc-browser?method=getmininginfo") getmininginfo

		table(class="table")
			tr
				th(class="table-active properties-header") Chain
				td(class="monospace") #{getblockchaininfo.chain}
			tr
				th(class="table-active properties-header") Version
				td(class="monospace") #{getnetworkinfo.version}
					span(class="monospace")  (#{getnetworkinfo.subversion})
			tr
				th(class="table-active properties-header") Protocol Version
				td(class="monospace") #{getnetworkinfo.protocolversion}

			if (getblockchaininfo.size_on_disk)
				tr
					th(class="table-active properties-header") Blockchain Size
					td(class="monospace") #{utils.formatBytes(getblockchaininfo.size_on_disk)}
						span(class="text-muted")  (pruned: #{getblockchaininfo.pruned})
			tr
				th(class="table-active properties-header") Connections
				td(class="monospace") #{getnetworkinfo.connections.toLocaleString()}
			tr
				th(class="table-active properties-header") Block Count
				td(class="monospace") #{getblockchaininfo.blocks.toLocaleString()}
					span(class="text-muted")  (header count: #{getblockchaininfo.headers.toLocaleString()})
			tr
				- var scales = [ {val:1000000000000000, name:"quadrillion"}, {val:1000000000000, name:"trillion"}, {val:1000000000, name:"billion"}, {val:1000000, name:"million"} ];
				- var scaleDone = false;
				th(class="table-active properties-header") Difficulty
				td(class="monospace")
					span #{parseFloat(getblockchaininfo.difficulty).toLocaleString()}
					each item in scales
						if (!scaleDone)
							- var fraction = Math.floor(getblockchaininfo.difficulty / item.val);
							if (fraction >= 1)
								- scaleDone = true;
								span(class="text-muted")  (#{fraction} #{item.name})
			tr
				- var scales = [ {val:1000000000000000, name:"PH/s"}, {val:1000000000000, name:"TH/s"}, {val:1000000000, name:"GH/s"}, {val:1000000, name:"MH/s"}, {val:1000, name:"KH/s"}, {val:1, name:"H/s"} ];
				- var scaleDone = false;
				th(class="table-active properties-header") Network Hashrate
				td(class="monospace")
					span #{parseFloat(getmininginfo.networkhashps).toLocaleString()} H/s
					each item in scales
						if (!scaleDone)
							- var fraction = (getmininginfo.networkhashps / item.val).toFixed(2);
							if (fraction >= 1)
								- scaleDone = true;
								span(class="text-muted")  (#{fraction} #{item.name})
			tr
				th(class="table-active properties-header") Status
				td(class="monospace")
					if (getblockchaininfo.initialblockdownload || getblockchaininfo.headers > getblockchaininfo.blocks)
						img(src="img/sync.png", alt="")
						span Initial block download progress #{(100 * getblockchaininfo.verificationprogress).toLocaleString()}%
					else
						img(src="img/done.png", alt="")
						span  Synchronized with network
			tr
				th(class="table-active properties-header") Network Traffic
				td(class="monospace")
					span Total Download: #{utils.formatBytes(getnettotals.totalbytesrecv)}
					br
					span Total Upload: #{utils.formatBytes(getnettotals.totalbytessent)}
			tr
				th(class="table-active properties-header") Warnings
				td(class="monospace")
					if (getnetworkinfo.warnings && getnetworkinfo.warnings.trim().length > 0)
						span #{getnetworkinfo.warnings}
					else
						span None
